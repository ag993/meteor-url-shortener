/* Reactivity causing infinite loop ------------------------------------------------------------ */

Template.redirect.rendered = function() {
  var id = URLs.findOne({ shortURL: this.data.shortURL })._id;
  URLs.update( {_id: id}, {$inc:{numVisit:1}});
};

In the code above, variable id get value from a reactive source (the db). On the third line, I'm updating
the related document in db, this change is automatically reflected in var id, thus the whole code block
will be run again (since the code block depends on the value of var id). And when the code is run again,
the related doc in db is changed again, and this pattern loops forever.

A possible fix is to add {reactive: false} to db query options.



/* Client-side code can only update db with _id as selector -------------------------------------- */

Using other field as selector will raise exception.

Note that sometimes it's impossible to work-around this by first getting the id.
The code below does NOT work, since it is caught in infinite reactive data change loop (see above):

// This code loops forever
Template.redirect.rendered = function() {
  var urlId = this.data._id;
  URLs.update( {_id: urlId}, {$inc:{numVisit:1}});
};



